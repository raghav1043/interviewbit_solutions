public class Solution {
    
    public void reverse(ListNode A){
        ListNode prev = null;
        ListNode curr = A;
        ListNode next = null;
        while(curr!=null){
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
    }
    
    public ListNode reverseList(ListNode A, int B) {
        if(B==0 || B==1){
            return A;
        }
        ListNode head = null;
        ListNode prevLast = null;
        ListNode start = A;
        ListNode curr = A;
        ListNode nextStart = null;
        while(curr!=null){
            int count=1;
            while(count<B){
                count = count+1;
                curr = curr.next;
            }
            nextStart = curr.next;
            curr.next = null;
            reverse(start);
            if(prevLast == null){
                head = curr;
            }else{
                prevLast.next = curr;
            }
            prevLast = start;
            curr = nextStart;
            start = nextStart;
        }
        return head;
    }
}